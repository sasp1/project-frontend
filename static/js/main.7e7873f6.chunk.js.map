{"version":3,"sources":["api/api.tsx","api/login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["instance","axios","create","baseURL","loginApi","username","password","post","then","res","data","App","useState","setUsername","setPassword","jwt","setJwt","onLogin","a","useEffect","console","log","className","id","type","name","onChange","event","target","value","defaultValue","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAOeA,E,OAJEC,EAAMC,OAAO,CAC5BC,QAAS,0BCFEC,EAAW,SAACC,EAAkBC,GACzC,OAAOL,EACJM,KAAK,SAAU,CAAEF,WAAUC,aAC3BE,MAAK,SAACC,GAAD,OAAcA,EAAIC,S,OC6DbC,MA9Df,WACE,MAAgCC,mBAAS,SAAzC,mBAAOP,EAAP,KAAiBQ,EAAjB,KACA,EAAgCD,mBAAS,YAAzC,mBAAON,EAAP,KAAiBQ,EAAjB,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAEMC,EAAO,uCAAG,4BAAAC,EAAA,sEACId,EAASC,EAAUC,GADvB,OACRG,EADQ,OAEdO,EAAOP,GAFO,2CAAH,qDAgBb,OAXAU,qBAAU,WACJJ,GAAKK,QAAQC,IAAI,MAAON,KAC3B,CAACA,IAUF,qBAAKO,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACGP,EACC,8BACE,mBAAGQ,GAAG,eAAN,0BAGF,sBAAKD,UAAU,OAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACEE,KAAK,OACLD,GAAG,WACHE,KAAK,WACLH,UAAU,QACVI,SAtBW,SAACC,GACxBd,EAAYc,EAAMC,OAAOC,QAsBbC,aAAa,UAEf,uBACEN,KAAK,WACLD,GAAG,WACHE,KAAK,WACLH,UAAU,QACVQ,aAAa,WACbJ,SA5BW,SAACC,GACxBb,EAAYa,EAAMC,OAAOC,aA8BjB,uBACA,uBACA,uBACA,uBACA,wBAAQP,UAAU,SAASS,QAASd,EAApC,2BC1CGe,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7e7873f6.chunk.js","sourcesContent":["import { default as axios } from 'axios';\r\n// https://github.com/axios/axios syntax above explained\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:3000',\r\n});\r\n\r\nexport default instance;\r\n","import axios from './api';\r\n\r\nexport const loginApi = (username: string, password: string) => {\r\n  return axios\r\n    .post('/login', { username, password })\r\n    .then((res: any) => res.data);\r\n};\r\n","import { ChangeEvent, useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { loginApi } from './api/login';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('admin');\r\n  const [password, setPassword] = useState('password');\r\n  const [jwt, setJwt] = useState('');\r\n\r\n  const onLogin = async () => {\r\n    const res = await loginApi(username, password);\r\n    setJwt(res);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (jwt) console.log('jwt', jwt);\r\n  }, [jwt]);\r\n\r\n  const onUsernameChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setUsername(event.target.value);\r\n  };\r\n  const onPasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {jwt ? (\r\n          <div>\r\n            <p id=\"confirmation\">Logged in!</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"form\">\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                className=\"input\"\r\n                onChange={onUsernameChange}\r\n                defaultValue=\"admin\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                className=\"input\"\r\n                defaultValue=\"password\"\r\n                onChange={onPasswordChange}\r\n              />\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <button className=\"submit\" onClick={onLogin}>\r\n              Login\r\n            </button>\r\n          </div>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}